# Generated by Django 3.0.7 on 2020-06-12 21:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('infosystem', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DonateMoney',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=12, primary_key=True, serialize=False)),
                ('org_name', models.CharField(db_column='Org_Name', max_length=100)),
                ('province', models.CharField(db_column='Province', max_length=20)),
                ('date', models.DateField(db_column='Date')),
                ('quantity', models.DecimalField(blank=True, db_column='Quantity', decimal_places=2, max_digits=10, null=True)),
                ('receipt_id', models.CharField(blank=True, db_column='Receipt_ID', max_length=8, null=True)),
                ('intention', models.CharField(blank=True, db_column='Intention', max_length=200, null=True)),
            ],
            options={
                'db_table': 'donate_money',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DonateResources',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=12, primary_key=True, serialize=False)),
                ('org_name', models.CharField(db_column='Org_Name', max_length=100)),
                ('res_name', models.CharField(db_column='Res_Name', max_length=100)),
                ('province', models.CharField(db_column='Province', max_length=20)),
                ('date', models.DateField(db_column='Date')),
                ('size', models.CharField(blank=True, db_column='Size', max_length=20, null=True)),
                ('unit', models.CharField(blank=True, db_column='Unit', max_length=20, null=True)),
                ('quantity', models.DecimalField(blank=True, db_column='Quantity', decimal_places=2, max_digits=10, null=True)),
                ('receipt_id', models.CharField(blank=True, db_column='Receipt_ID', max_length=8, null=True)),
                ('intention', models.CharField(blank=True, db_column='Intention', max_length=100, null=True)),
            ],
            options={
                'db_table': 'donate_resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfosystemUserinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('bday', models.DateField()),
                ('checked', models.IntegerField()),
            ],
            options={
                'db_table': 'infosystem_userinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReceiveMoney',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=12, primary_key=True, serialize=False)),
                ('rec_name', models.CharField(db_column='Rec_Name', max_length=100)),
                ('province', models.CharField(db_column='Province', max_length=20)),
                ('date', models.DateField(db_column='Date')),
                ('quantity', models.DecimalField(db_column='Quantity', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'receive_money',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Receiver',
            fields=[
                ('rec_name', models.CharField(db_column='Rec_Name', max_length=100, primary_key=True, serialize=False)),
                ('province', models.CharField(db_column='Province', max_length=20)),
            ],
            options={
                'db_table': 'receiver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReceiveResources',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=12, primary_key=True, serialize=False)),
                ('rec_name', models.CharField(db_column='Rec_Name', max_length=100)),
                ('res_name', models.CharField(db_column='Res_Name', max_length=100)),
                ('province', models.CharField(db_column='Province', max_length=20)),
                ('date', models.DateField(db_column='Date')),
                ('size', models.CharField(blank=True, db_column='Size', max_length=20, null=True)),
                ('unit', models.CharField(blank=True, db_column='Unit', max_length=20, null=True)),
                ('quantity', models.DecimalField(blank=True, db_column='Quantity', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'receive_resources',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='UserInfo',
        ),
    ]
